Metadata-Version: 2.4
Name: my_service
Version: 0.1.0
Summary: A sample Python project
Author-email: Your Name <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/yourusername/my-package
Project-URL: Bug Tracker, https://github.com/yourusername/my-package/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: requests>=2.28.0
Requires-Dist: boto3>=1.26.0
Requires-Dist: flask>=2.3.0
Requires-Dist: fastapi>=0.100.0
Requires-Dist: uvicorn>=0.22.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: black>=23.1.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Requires-Dist: invoke>=2.0.0; extra == "dev"

# ram-ai-python-learning

## Setup

### Create Virtual Environment
```bash
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
```

### Install Dependencies
```bash
# Upgrade pip first
pip install --upgrade pip
# Install package in editable mode
pip install -e ".[dev]"
```

## Running Tests
```bash
pytest tests/
# or using invoke
invoke test
```

## Available Tasks
```bash
invoke --list
```

- `invoke test` - Run tests
- `invoke format` - Format code
- `invoke lint` - Run linting checks
- `invoke clean` - Clean build artifacts
- `invoke install` - Install in development mode

## Docker

### Build and Run
```bash
docker build -t ram-ai-python .
docker run ram-ai-python
```
